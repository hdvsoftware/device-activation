@using MoHIS.Activation.Portal.Blazor.Client.Utils;
@inject MoHIS.Activation.Portal.Blazor.Client.AppState AppState

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">MoHIS.Activation.Portal.Blazor</a>
    <button class="navbar-toggler" onclick=@ToggleNavMenu>
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class=@(collapseNavMenu ? "collapse" : null) onclick=@ToggleNavMenu>
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match=NavLinkMatch.All>
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"></span> Counter
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" onclick="@SignOut">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Sign out
                </NavLink>
            </li>
        
    </ul>
</div>

@functions {
    bool collapseNavMenu = true;
    protected override async Task OnInitAsync() {
        //await JavascriptInterop.logToJavascript("NavMenu.OnInitAsync: signed in:"+ AppState.IsSignedIn);
        //await AppState.CheckIfSignedInAsync();
        //IsSignedIn = AppState.IsSignedIn;
        //await JavascriptInterop.logToJavascript("NavMenu.OnInitAsync: signed in:" + AppState.IsSignedIn);
    }

    //    protected override async Task OnInitAsync() {}
    //        AppState.UserChange += new Action() {
    //            IsSignedIn = AppState.IsSignedIn;

    //    }
    //}

    void ToggleNavMenu() {
        collapseNavMenu = !collapseNavMenu;
    }

    async Task SignOut() {
        await AppState.SignOut();
    }
}
